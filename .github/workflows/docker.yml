name: SDP Kubernetes Client

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: check
      - uses: actions-rs/cargo@v1
        with:
          command: test

  docker-rust:
    needs:
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bin:
          - "sdp-device-id-service"
          - "sdp-identity-service"
          - "sdp-injector"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Read package version
        run: |
          echo BIN_VERSION=$(cargo metadata | jq --raw-output '.packages[] | select(.name == "${{ matrix.bin }}") | .version') >> $GITHUB_ENV
      - name: Get build profile
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
           echo '::set-output name=PROFILE::release'
          else
           echo '::set-output name=PROFILE::debug'
          fi
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PROFILE=${{ steps.build-profile.outputs.PROFILE }}
          context: .
          file: ${{ matrix.bin }}/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.bin }}:${{ env.BIN_VERSION }}

  docker-client-images:
    needs:
      - test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bin:
          - "sdp-dnsmasq"
          - "sdp-headless-driver"
          - "sdp-headless-service"
        client-version:
          - "5.5.1"
          - "6.0.1"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Split version into major/minor/maintenance
        uses: jungwinter/split@v2
        id: split
        with:
          msg: ${{ matrix.client-version }}
          separator: '.'
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/${{ matrix.bin }}-Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          build-args: |
            MAJOR_VERSION=${{ steps.split.outputs._0 }}
            MINOR_VERSION=${{ steps.split.outputs._1 }}
            MAINTENANCE_VERSION=${{ steps.split.outputs._2 }}
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.bin }}:${{ matrix.client-version }}

  helm:
    runs-on: ubuntu-latest
    needs:
      - docker
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v2
      - uses: mikefarah/yq@master
        id: chartVersion
        with:
          cmd: yq eval .version k8s/chart/Chart.yaml
      - uses: azure/setup-helm@v1
        with:
          version: 3.7.2
      - name: Login to GitHub Container Registry
        run: helm registry login ghcr.io/${{ github.repository }} --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Lint chart
        run: helm lint k8s/chart
      - name: Package chart
        run: helm package k8s/chart --dependency-update
      - name: Push chart
        if: ${{ github.ref == 'refs/heads/main' }}
        run: helm push sdp-k8s-client-${{ steps.chartVersion.outputs.result }}.tgz oci://ghcr.io/appgate/charts
