#!/bin/bash

## This scripts collects claims in PODs
##
## It outputs a json containing the following claims (if found)
##   pod_node :: node name where the pod is running
##   pod_name :: name of the pod
##   pod_namespace :: namespace whe the pod is running
##   pod_service_account :: service account used by the pod
##   annotations :: dict of key, value pairs with all the annotations
##                  defined in the pod
##   labels :: dict of key, value pairs with all the labels defined
##             in the pod

POD_INFO_DIR=${POD_INFO_DIR:-/etc/pod-info}
POD_INFO_FILES="${POD_INFO_DIR}/labels ${POD_INFO_DIR}/annotations"
POD_INFO_ENVS="POD_NODE POD_NAME POD_NAMESPACE POD_SERVICE_ACCOUNT"
N=0

function kv_to_json () {
    file=$1
    key=${file##*/}
    awk  -vkey="$key" '
BEGIN {
      n = 0
      printf("\""key"\":{")
}
{
        if (split($0, vs, "=") == 2) {
           if (n == 0)
              n = 1
           else
             printf(",")
           printf("\"%s\":%s", vs[1], vs[2])
        }
}
END { printf("}") }' "$file"
}

function collect_envs () {
    for env_name in $POD_INFO_ENVS; do
        v=$(eval echo \$"${env_name}")
        if [ -z "$v" ]; then
            continue
        fi
        if [ $N -eq 0 ]; then
            N=1
        else
            echo -n ","
        fi
        echo -n "\"$(echo "$env_name" | tr "[:upper:]" "[:lower:]")\":\"$v\""
    done
}

echo -n "{"
collect_envs
for f in ${POD_INFO_FILES}; do
    if [ ! -f "$f" ]; then
        continue
    fi
    if [ $N -eq 0 ]; then
        N=1
    else
        echo -n ","
    fi
    kv_to_json "$f"
done
echo -n "}"
