apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sdp-k8s-client.fullname" . }}-preinstall
  namespace: {{ include "sdp-k8s-client.namespace" . }}
  labels:
  {{- include "sdp-k8s-client.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ include "sdp-k8s-client.serviceAccountName" . }}-hooks
      restartPolicy: Never
      volumes:
        - name: sdp-ca-config
          configMap:
            name: sdp-ca-config-{{ .Release.Name }}
        - name: sdp-injector-config
          configMap:
            name: sdp-injector-config-{{ .Release.Name }}
        - name: sdp-admission-webhook
          configMap:
            name: sdp-admission-webhook-{{ .Release.Name }}
        - name: tmp
          emptyDir: {}
      securityContext:
        runAsUser: 1000
      initContainers:
        - name: delete-secret
          image: "bitnami/kubectl"
          command: [ "kubectl" ]
          args: [ "delete", "secret", "{{ include "sdp-k8s-client.injector-secret" . }}", "--namespace", "{{ include "sdp-k8s-client.namespace" . }}", "--ignore-not-found", "true" ]
        - name: create-sdp-ca-key
          image: "alpine/openssl"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          command: ["openssl"]
          args: [ "genrsa", "-out", "/tmp/sdp-ca-key.pem", "2048" ]
        - name: create-sdp-ca-crt
          image: "alpine/openssl"
          volumeMounts:
            - name: sdp-ca-config
              mountPath: /tmp/config
              readOnly: true
            - name: tmp
              mountPath: /tmp
          command: ["openssl"]
          args: [  "req", "-new", "-x509", "-key", "/tmp/sdp-ca-key.pem", "-out", "/tmp/sdp-ca.crt", "-config", "/tmp/config/sdp-ca.conf" ]
        - name: create-sdp-injector-key
          image: "alpine/openssl"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          command: ["openssl"]
          args: [ "genrsa", "-out", "/tmp/sdp-injector-key.pem", "2048" ]
        - name: create-sdp-injector-csr
          image: "alpine/openssl"
          volumeMounts:
            - name: sdp-injector-config
              mountPath: /tmp/config
              readOnly: true
            - name: tmp
              mountPath: /tmp
          command: ["openssl"]
          args: [ "req", "-new", "-key", "/tmp/sdp-injector-key.pem", "-out", "/tmp/sdp-injector.csr", "-config", "/tmp/config/sdp-injector.conf" ]
        - name: create-sdp-injector-ca-crt
          image: "alpine/openssl"
          volumeMounts:
            - name: sdp-injector-config
              mountPath: /tmp/config
              readOnly: true
            - name: tmp
              mountPath: /tmp
          env:
            # Pass $(CERT_DAYS) as -days argument to register it as an integer
            # Otherwise it will be passed as `-days "364"` instead of `-days 365`
            - name: CERT_DAYS
              value: "{{ .Values.sdp.injector.certDays }}"
          command: ["openssl"]
          args: ["x509", "-req", "-in", "/tmp/sdp-injector.csr", "-extfile", "/tmp/config/sdp-x509-ext.conf", "-extensions", "v3_ca", "-CA", "/tmp/sdp-ca.crt", "-CAkey",  "/tmp/sdp-ca-key.pem", "-CAcreateserial", "-days", "$(CERT_DAYS)", "-out", "/tmp/sdp-injector-crt.pem"]
        - name: create-ca-crt-secret
          image: "bitnami/kubectl"
          command: [ "kubectl" ]
          args: [ "create", "secret", "generic", "{{ include "sdp-k8s-client.injector-ca-crt" . }}", "--from-file=ca.crt=/tmp/sdp-ca.crt", "--namespace", "{{ include "sdp-k8s-client.namespace" . }}" ]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: true
        - name: annotate-ca-crt-secret
          image: "bitnami/kubectl"
          command: [ "kubectl" ]
          args: [ "annotate", "secret", "{{ include "sdp-k8s-client.injector-ca-crt" . }}", "cert-manager.io/allow-direct-injection=true", "--namespace", "{{ include "sdp-k8s-client.namespace" . }}" ]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: true
        - name: create-injector-secret
          image: "bitnami/kubectl"
          command: [ "kubectl" ]
          args: [ "create", "secret", "generic", "{{ include "sdp-k8s-client.injector-secret" . }}", "--from-file=sdp-injector-key.pem=/tmp/sdp-injector-key.pem", "--from-file=sdp-injector-crt.pem=/tmp/sdp-injector-crt.pem", "--namespace", "{{ include "sdp-k8s-client.namespace" . }}" ]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: true
      containers:
        - name: print-csr
          image: "alpine/openssl"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          command: [ "openssl" ]
          args: [ "req", "-text", "-noout", "-verify", "-in", "/tmp/sdp-injector.csr" ]
        - name: print-ca-crt
          image: "alpine/openssl"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          command: [ "openssl" ]
          args: [ "x509", "-text", "-in", "/tmp/sdp-ca.crt", "-noout" ]
        - name: print-injector-ca-crt
          image: "alpine/openssl"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          command: [ "openssl" ]
          args: [ "x509", "-text", "-in", "/tmp/sdp-injector-crt.pem", "-noout" ]
