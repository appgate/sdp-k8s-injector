apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sdp-injector.fullname" . }}-injector
  namespace: {{ include "sdp-injector.namespace" . }}
  labels:
  {{- include "sdp-injector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.sdp.injector.replica }}
  selector:
    matchLabels:
      {{- include "sdp-injector.selectorLabels" . | nindent 6 }}-injector
  template:
    metadata:
      labels:
        {{- include "sdp-injector.selectorLabels" . | nindent 8 }}-injector
    spec:
      {{- with .Values.global.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sdp-injector.serviceAccountName" .}}-injector
      volumes:
        - name: sdp-injector-log
          configMap:
            name: {{ include "sdp-injector.fullname" . }}-log
            items:
              - key: sdp-injector-log4rs.yaml
                path: log4rs.yaml
        - name: sdp-injector-secrets-and-config
          projected:
            sources:
              - secret:
                  name: {{ include "sdp-injector.injector-secret" . }}
                  items:
                    - key: ca.crt
                      path: sdp-injector.crt
                    - key: tls.key
                      path: sdp-injector.key
              - configMap:
                  name: {{ include "sdp-injector.sidecar-config" . }}
                  items:
                    - key: sdp-sidecars.json
                      path: sdp-sidecars.json
      containers:
        - name: {{ .Chart.Name }}-injector
          env:
          env:
            - name: SDP_SYSTEM_NO_VERIFY
              value: {{ .Values.sdp.identityService.sdpSystemNoVerify | quote }}
            - name: SDP_SYSTEM_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: sdp-injector-client-config
                  key: client-controller-url
            - name: SDP_K8S_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ required ".Values.sdp.adminSecret is required" .Values.sdp.adminSecret }}
                  key: sdp-injector-api-username
            - name: SDP_K8S_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ required ".Values.sdp.adminSecret is required" .Values.sdp.adminSecret }}
                  key: sdp-injector-api-password
            - name: SDP_K8S_PROVIDER
              valueFrom:
                secretKeyRef:
                  name: {{ required ".Values.sdp.adminSecret is required" .Values.sdp.adminSecret }}
                  key: sdp-injector-api-provider
            - name: SDP_LOG_CONFIG_FILE
              value: /opt/sdp-injector/log4rs.yaml
            - name: SDP_DEFAULT_CLIENT_VERSION
              value: {{ .Values.sdp.clientVersion | quote }}
            - name: SDP_FILE_WATCHER_POLL_INTERVAL
              value: {{ quote .Values.sdp.injector.certificatePollingInterval }}
          image: "{{ default .Values.global.image.repository .Values.sdp.injector.image.repository }}/sdp-injector:{{ default .Chart.AppVersion .Values.sdp.injector.image.tag }}"
          imagePullPolicy: {{ default .Values.global.image.pullPolicy .Values.sdp.injector.image.pullPolicy }}
          volumeMounts:
            - name: sdp-injector-secrets-and-config
              mountPath: /opt/sdp-injector/k8s
              readOnly: true
            - name: sdp-injector-log
              mountPath: /opt/sdp-injector/
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "sdp-injector.fullname" . }}
  namespace: {{ include "sdp-injector.namespace" . }}
  labels:
    {{- include "sdp-injector.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: 8443
      name: https-webhooks
  selector:
    {{- include "sdp-injector.selectorLabels" . | nindent 4 }}-injector
